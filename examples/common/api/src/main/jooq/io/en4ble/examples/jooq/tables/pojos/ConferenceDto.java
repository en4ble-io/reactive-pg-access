/*
 * This file is generated by jOOQ.
 */
package io.en4ble.examples.jooq.tables.pojos;


import io.en4ble.examples.enums.ConferenceState;
import io.en4ble.pgaccess.dto.PointDTO;

import java.io.Serializable;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.UUID;


/**
 * A simple conference.
 */
@io.swagger.v3.oas.annotations.media.Schema(name="Conference", title="A simple conference.")
public class ConferenceDto extends Object implements Serializable, Cloneable {

    private static final long serialVersionUID = -1163512992;

    private UUID            id;
    private LocalDateTime   created;
    private LocalDateTime   updated;
    private String          name;
    private String          about;
    private LocalDate       startDate;
    private LocalDate       endDate;
    private ConferenceState state;
    private PointDTO        location;

    public ConferenceDto() {}

    public ConferenceDto(ConferenceDto value) {
        this.id = value.id;
        this.created = value.created;
        this.updated = value.updated;
        this.name = value.name;
        this.about = value.about;
        this.startDate = value.startDate;
        this.endDate = value.endDate;
        this.state = value.state;
        this.location = value.location;
    }

    public ConferenceDto(
        UUID            id,
        LocalDateTime   created,
        LocalDateTime   updated,
        String          name,
        String          about,
        LocalDate       startDate,
        LocalDate       endDate,
        ConferenceState state,
        PointDTO        location
    ) {
        this.id = id;
        this.created = created;
        this.updated = updated;
        this.name = name;
        this.about = about;
        this.startDate = startDate;
        this.endDate = endDate;
        this.state = state;
        this.location = location;
    }

    @io.swagger.v3.oas.annotations.media.Schema(accessMode = io.swagger.v3.oas.annotations.media.Schema.AccessMode.READ_WRITE, name="id")
    public UUID getId() {
        return this.id;
    }

    public ConferenceDto setId(UUID id) {
        this.id = id;
        return this;
    }

    @io.swagger.v3.oas.annotations.Hidden
    @com.fasterxml.jackson.annotation.JsonIgnore
    public LocalDateTime getCreated() {
        return this.created;
    }

    public ConferenceDto setCreated(LocalDateTime created) {
        this.created = created;
        return this;
    }

    @io.swagger.v3.oas.annotations.Hidden
    @com.fasterxml.jackson.annotation.JsonIgnore
    public LocalDateTime getUpdated() {
        return this.updated;
    }

    public ConferenceDto setUpdated(LocalDateTime updated) {
        this.updated = updated;
        return this;
    }

    /**
     * The name of the conference.
     */
    @org.hibernate.validator.constraints.Length(min = 5, max = 30)
    @io.swagger.v3.oas.annotations.media.Schema(accessMode = io.swagger.v3.oas.annotations.media.Schema.AccessMode.READ_WRITE, name="name", title="The name of the conference.")
    public String getName() {
        return this.name;
    }

    public ConferenceDto setName(String name) {
        this.name = name;
        return this;
    }

    /**
     * The description of the conference.
     */
    @org.hibernate.validator.constraints.Length(min = 20, max = 2000)
    @io.swagger.v3.oas.annotations.media.Schema(accessMode = io.swagger.v3.oas.annotations.media.Schema.AccessMode.READ_WRITE, name="about", title="The description of the conference.")
    public String getAbout() {
        return this.about;
    }

    public ConferenceDto setAbout(String about) {
        this.about = about;
        return this;
    }

    @io.swagger.v3.oas.annotations.media.Schema(accessMode = io.swagger.v3.oas.annotations.media.Schema.AccessMode.READ_WRITE, name="startDate")
    public LocalDate getStartDate() {
        return this.startDate;
    }

    public ConferenceDto setStartDate(LocalDate startDate) {
        this.startDate = startDate;
        return this;
    }

    @io.swagger.v3.oas.annotations.media.Schema(accessMode = io.swagger.v3.oas.annotations.media.Schema.AccessMode.READ_WRITE, name="endDate")
    public LocalDate getEndDate() {
        return this.endDate;
    }

    public ConferenceDto setEndDate(LocalDate endDate) {
        this.endDate = endDate;
        return this;
    }

    @org.hibernate.validator.constraints.Length(min = 3, max = 7)
    @io.swagger.v3.oas.annotations.media.Schema(accessMode = io.swagger.v3.oas.annotations.media.Schema.AccessMode.READ_ONLY, name="state", title="", defaultValue="NEW")
    public ConferenceState getState() {
        return this.state;
    }

    public ConferenceDto setState(ConferenceState state) {
        this.state = state;
        return this;
    }

    @io.swagger.v3.oas.annotations.media.Schema(accessMode = io.swagger.v3.oas.annotations.media.Schema.AccessMode.READ_WRITE, name="location")
    public PointDTO getLocation() {
        return this.location;
    }

    public ConferenceDto setLocation(PointDTO location) {
        this.location = location;
        return this;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("ConferenceDto (");

        sb.append(id);
        sb.append(", ").append(created);
        sb.append(", ").append(updated);
        sb.append(", ").append(name);
        sb.append(", ").append(about);
        sb.append(", ").append(startDate);
        sb.append(", ").append(endDate);
        sb.append(", ").append(state);
        sb.append(", ").append(location);

        sb.append(")");
        return sb.toString();
    }
}
