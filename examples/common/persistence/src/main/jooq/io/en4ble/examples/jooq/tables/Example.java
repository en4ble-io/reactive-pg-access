/*
 * This file is generated by jOOQ.
 */
package io.en4ble.examples.jooq.tables;


import io.en4ble.examples.jooq.Indexes;
import io.en4ble.examples.jooq.Keys;
import io.en4ble.examples.jooq.Pgaccess;
import io.en4ble.examples.jooq.tables.records.ExampleRecord;
import io.en4ble.pgaccess.dto.BoxDTO;
import io.en4ble.pgaccess.dto.CircleDTO;
import io.en4ble.pgaccess.dto.LineDTO;
import io.en4ble.pgaccess.dto.LineSegmentDTO;
import io.en4ble.pgaccess.dto.PathDTO;
import io.en4ble.pgaccess.dto.PointDTO;
import io.en4ble.pgaccess.dto.PolygonDTO;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import java.io.Serializable;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.time.OffsetDateTime;
import java.time.OffsetTime;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;


/**
 * An example table containing all datatypes that are supported by reactive-pg-access.
 */
public class Example extends TableImpl<ExampleRecord> implements Serializable, Cloneable {

    private static final long serialVersionUID = -68117740;

    /**
     * The reference instance of <code>pgaccess.p_example</code>
     */
    public static final Example EXAMPLE = new Example();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ExampleRecord> getRecordType() {
        return ExampleRecord.class;
    }

    /**
     * The column <code>pgaccess.p_example.e_uuid</code>.
     */
// ----- A uuid
    public final TableField<ExampleRecord, UUID> UUID = createField(DSL.name("e_uuid"), org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>pgaccess.p_example.e_uuid_array</code>.
     */
// ----- A _uuid
    public final TableField<ExampleRecord, UUID[]> UUID_ARRAY = createField(DSL.name("e_uuid_array"), org.jooq.impl.SQLDataType.UUID.getArrayDataType(), this, "");

    /**
     * The column <code>pgaccess.p_example.e_text</code>. {{minLength=10}}{{maxLength=200}}
     */
// ----- A text
    public final TableField<ExampleRecord, String> TEXT = createField(DSL.name("e_text"), org.jooq.impl.SQLDataType.CLOB, this, "{{minLength=10}}{{maxLength=200}}");

    /**
     * The column <code>pgaccess.p_example.e_text_array</code>.
     */
// ----- A _text
    public final TableField<ExampleRecord, String[]> TEXT_ARRAY = createField(DSL.name("e_text_array"), org.jooq.impl.SQLDataType.CLOB.getArrayDataType(), this, "");

    /**
     * The column <code>pgaccess.p_example.e_string</code>. {{minLength=4}}
     */
// ----- A varchar
    public final TableField<ExampleRecord, String> STRING = createField(DSL.name("e_string"), org.jooq.impl.SQLDataType.VARCHAR(20), this, "{{minLength=4}}");

    /**
     * The column <code>pgaccess.p_example.e_string_array</code>.
     */
// ----- A _varchar
    public final TableField<ExampleRecord, String[]> STRING_ARRAY = createField(DSL.name("e_string_array"), org.jooq.impl.SQLDataType.VARCHAR(20).getArrayDataType(), this, "");

    /**
     * The column <code>pgaccess.p_example.e_short_value</code>.
     */
// ----- A int2
    public final TableField<ExampleRecord, Short> SHORT_VALUE = createField(DSL.name("e_short_value"), org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>pgaccess.p_example.e_short_array</code>.
     */
// ----- A _int2
    public final TableField<ExampleRecord, Short[]> SHORT_ARRAY = createField(DSL.name("e_short_array"), org.jooq.impl.SQLDataType.SMALLINT.getArrayDataType(), this, "");

    /**
     * The column <code>pgaccess.p_example.e_integer_value</code>.
     */
// ----- A int4
    public final TableField<ExampleRecord, Integer> INTEGER_VALUE = createField(DSL.name("e_integer_value"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>pgaccess.p_example.e_integer_array</code>.
     */
// ----- A _int4
    public final TableField<ExampleRecord, Integer[]> INTEGER_ARRAY = createField(DSL.name("e_integer_array"), org.jooq.impl.SQLDataType.INTEGER.getArrayDataType(), this, "");

    /**
     * The column <code>pgaccess.p_example.e_long_value</code>.
     */
// ----- A int8
    public final TableField<ExampleRecord, Long> LONG_VALUE = createField(DSL.name("e_long_value"), org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>pgaccess.p_example.e_long_array</code>.
     */
// ----- A _int8
    public final TableField<ExampleRecord, Long[]> LONG_ARRAY = createField(DSL.name("e_long_array"), org.jooq.impl.SQLDataType.BIGINT.getArrayDataType(), this, "");

    /**
     * The column <code>pgaccess.p_example.e_float_value</code>.
     */
// ----- A float4
    public final TableField<ExampleRecord, Float> FLOAT_VALUE = createField(DSL.name("e_float_value"), org.jooq.impl.SQLDataType.REAL, this, "");

    /**
     * The column <code>pgaccess.p_example.e_float_array</code>.
     */
// ----- A _float4
    public final TableField<ExampleRecord, Float[]> FLOAT_ARRAY = createField(DSL.name("e_float_array"), org.jooq.impl.SQLDataType.REAL.getArrayDataType(), this, "");

    /**
     * The column <code>pgaccess.p_example.e_double_value</code>.
     */
// ----- A float8
    public final TableField<ExampleRecord, Double> DOUBLE_VALUE = createField(DSL.name("e_double_value"), org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>pgaccess.p_example.e_double_array</code>.
     */
// ----- A _float8
    public final TableField<ExampleRecord, Double[]> DOUBLE_ARRAY = createField(DSL.name("e_double_array"), org.jooq.impl.SQLDataType.FLOAT.getArrayDataType(), this, "");

    /**
     * The column <code>pgaccess.p_example.e_boolean_value</code>.
     */
// ----- A bool
    public final TableField<ExampleRecord, Boolean> BOOLEAN_VALUE = createField(DSL.name("e_boolean_value"), org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>pgaccess.p_example.e_boolean_array</code>.
     */
// ----- A _bool
    public final TableField<ExampleRecord, Boolean[]> BOOLEAN_ARRAY = createField(DSL.name("e_boolean_array"), org.jooq.impl.SQLDataType.BOOLEAN.getArrayDataType(), this, "");

    /**
     * The column <code>pgaccess.p_example.e_date</code>.
     */
// ----- A date
    public final TableField<ExampleRecord, LocalDate> DATE = createField(DSL.name("e_date"), org.jooq.impl.SQLDataType.LOCALDATE, this, "");

    /**
     * The column <code>pgaccess.p_example.e_date_array</code>.
     */
// ----- A _date
    public final TableField<ExampleRecord, LocalDate[]> DATE_ARRAY = createField(DSL.name("e_date_array"), org.jooq.impl.SQLDataType.LOCALDATE.getArrayDataType(), this, "");

    /**
     * The column <code>pgaccess.p_example.e_time</code>.
     */
// ----- A time
    public final TableField<ExampleRecord, LocalTime> TIME = createField(DSL.name("e_time"), org.jooq.impl.SQLDataType.LOCALTIME, this, "");

    /**
     * The column <code>pgaccess.p_example.e_time_array</code>.
     */
// ----- A _time
    public final TableField<ExampleRecord, LocalTime[]> TIME_ARRAY = createField(DSL.name("e_time_array"), org.jooq.impl.SQLDataType.LOCALTIME.getArrayDataType(), this, "");

    /**
     * The column <code>pgaccess.p_example.e_timetz</code>.
     */
// ----- A timetz
    public final TableField<ExampleRecord, OffsetTime> TIMETZ = createField(DSL.name("e_timetz"), org.jooq.impl.SQLDataType.TIMEWITHTIMEZONE, this, "");

    /**
     * The column <code>pgaccess.p_example.e_timetz_array</code>.
     */
// ----- A _timetz
    public final TableField<ExampleRecord, OffsetTime[]> TIMETZ_ARRAY = createField(DSL.name("e_timetz_array"), org.jooq.impl.SQLDataType.TIMEWITHTIMEZONE.getArrayDataType(), this, "");

    /**
     * The column <code>pgaccess.p_example.e_date_time</code>.
     */
// ----- A timestamp
    public final TableField<ExampleRecord, LocalDateTime> DATE_TIME = createField(DSL.name("e_date_time"), org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>pgaccess.p_example.e_date_time_array</code>.
     */
// ----- A _timestamp
    public final TableField<ExampleRecord, LocalDateTime[]> DATE_TIME_ARRAY = createField(DSL.name("e_date_time_array"), org.jooq.impl.SQLDataType.LOCALDATETIME.getArrayDataType(), this, "");

    /**
     * The column <code>pgaccess.p_example.e_date_timetz</code>.
     */
// ----- A timestamptz
    public final TableField<ExampleRecord, OffsetDateTime> DATE_TIMETZ = createField(DSL.name("e_date_timetz"), org.jooq.impl.SQLDataType.TIMESTAMPWITHTIMEZONE, this, "");

    /**
     * The column <code>pgaccess.p_example.e_date_timetz_array</code>.
     */
// ----- A _timestamptz
    public final TableField<ExampleRecord, OffsetDateTime[]> DATE_TIMETZ_ARRAY = createField(DSL.name("e_date_timetz_array"), org.jooq.impl.SQLDataType.TIMESTAMPWITHTIMEZONE.getArrayDataType(), this, "");

    /**
     * The column <code>pgaccess.p_example.e_point</code>.
     */
// ----- A point
    public final TableField<ExampleRecord, PointDTO> POINT = createField(DSL.name("e_point"), org.jooq.impl.CustomSQLDataType.POINT_DTO, this, "");

    /**
     * The column <code>pgaccess.p_example.e_point_array</code>.
     */
// ----- A _point
    public final TableField<ExampleRecord, PointDTO[]> POINT_ARRAY = createField(DSL.name("e_point_array"), org.jooq.impl.CustomSQLDataType.POINT_DTO.getArrayDataType(), this, "");

    /**
     * The column <code>pgaccess.p_example.e_line</code>.
     */
// ----- A line
    public final TableField<ExampleRecord, LineDTO> LINE = createField(DSL.name("e_line"), org.jooq.impl.CustomSQLDataType.LINE_DTO, this, "");

    /**
     * The column <code>pgaccess.p_example.e_line_array</code>.
     */
// ----- A _line
    public final TableField<ExampleRecord, LineDTO[]> LINE_ARRAY = createField(DSL.name("e_line_array"), org.jooq.impl.CustomSQLDataType.LINE_DTO.getArrayDataType(), this, "");

    /**
     * The column <code>pgaccess.p_example.e_line_segment</code>.
     */
// ----- A lseg
    public final TableField<ExampleRecord, LineSegmentDTO> LINE_SEGMENT = createField(DSL.name("e_line_segment"), org.jooq.impl.CustomSQLDataType.LSEG_DTO, this, "");

    /**
     * The column <code>pgaccess.p_example.e_line_segment_array</code>.
     */
// ----- A _lseg
    public final TableField<ExampleRecord, LineSegmentDTO[]> LINE_SEGMENT_ARRAY = createField(DSL.name("e_line_segment_array"), org.jooq.impl.CustomSQLDataType.LSEG_DTO.getArrayDataType(), this, "");

    /**
     * The column <code>pgaccess.p_example.e_box</code>.
     */
// ----- A box
    public final TableField<ExampleRecord, BoxDTO> BOX = createField(DSL.name("e_box"), org.jooq.impl.CustomSQLDataType.BOX_DTO, this, "");

    /**
     * The column <code>pgaccess.p_example.e_box_array</code>.
     */
// ----- A _box
    public final TableField<ExampleRecord, BoxDTO[]> BOX_ARRAY = createField(DSL.name("e_box_array"), org.jooq.impl.CustomSQLDataType.BOX_DTO.getArrayDataType(), this, "");

    /**
     * The column <code>pgaccess.p_example.e_path</code>.
     */
// ----- A path
    public final TableField<ExampleRecord, PathDTO> PATH = createField(DSL.name("e_path"), org.jooq.impl.CustomSQLDataType.PATH_DTO, this, "");

    /**
     * The column <code>pgaccess.p_example.e_path_array</code>.
     */
// ----- A _path
    public final TableField<ExampleRecord, PathDTO[]> PATH_ARRAY = createField(DSL.name("e_path_array"), org.jooq.impl.CustomSQLDataType.PATH_DTO.getArrayDataType(), this, "");

    /**
     * The column <code>pgaccess.p_example.e_polygon</code>.
     */
// ----- A polygon
    public final TableField<ExampleRecord, PolygonDTO> POLYGON = createField(DSL.name("e_polygon"), org.jooq.impl.CustomSQLDataType.POLYGON_DTO, this, "");

    /**
     * The column <code>pgaccess.p_example.e_polygon_array</code>.
     */
// ----- A _polygon
    public final TableField<ExampleRecord, PolygonDTO[]> POLYGON_ARRAY = createField(DSL.name("e_polygon_array"), org.jooq.impl.CustomSQLDataType.POLYGON_DTO.getArrayDataType(), this, "");

    /**
     * The column <code>pgaccess.p_example.e_circle</code>.
     */
// ----- A circle
    public final TableField<ExampleRecord, CircleDTO> CIRCLE = createField(DSL.name("e_circle"), org.jooq.impl.CustomSQLDataType.CIRCLE_DTO, this, "");

    /**
     * The column <code>pgaccess.p_example.e_circle_array</code>.
     */
// ----- A _circle
    public final TableField<ExampleRecord, CircleDTO[]> CIRCLE_ARRAY = createField(DSL.name("e_circle_array"), org.jooq.impl.CustomSQLDataType.CIRCLE_DTO.getArrayDataType(), this, "");

    /**
     * The column <code>pgaccess.p_example.e_name</code>.
     */
// ----- A name
    public final TableField<ExampleRecord, String> NAME = createField(DSL.name("e_name"), org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>pgaccess.p_example.e_name_array</code>.
     */
// ----- A _name
    public final TableField<ExampleRecord, String[]> NAME_ARRAY = createField(DSL.name("e_name_array"), org.jooq.impl.SQLDataType.VARCHAR.getArrayDataType(), this, "");

    /**
     * The column <code>pgaccess.p_example.e_short_serial</code>.
     */
// ----- A int2
    public final TableField<ExampleRecord, Short> SHORT_SERIAL = createField(DSL.name("e_short_serial"), org.jooq.impl.SQLDataType.SMALLINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('pgaccess.p_example_e_short_serial_seq'::regclass)", org.jooq.impl.SQLDataType.SMALLINT)), this, "");

    /**
     * The column <code>pgaccess.p_example.e_serial</code>.
     */
// ----- A int4
    public final TableField<ExampleRecord, Integer> SERIAL = createField(DSL.name("e_serial"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('pgaccess.p_example_e_serial_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>pgaccess.p_example.e_long_serial</code>.
     */
// ----- A int8
    public final TableField<ExampleRecord, Long> LONG_SERIAL = createField(DSL.name("e_long_serial"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('pgaccess.p_example_e_long_serial_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>pgaccess.p_example.e_state</code>.
     */
// ----- A varchar
    public final TableField<ExampleRecord, String> STATE = createField(DSL.name("e_state"), org.jooq.impl.SQLDataType.VARCHAR(3).defaultValue(org.jooq.impl.DSL.field("'new'::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * Create a <code>pgaccess.p_example</code> table reference
     */
    public Example() {
        this(DSL.name("p_example"), null);
    }

    /**
     * Create an aliased <code>pgaccess.p_example</code> table reference
     */
    public Example(String alias) {
        this(DSL.name(alias), EXAMPLE);
    }

    /**
     * Create an aliased <code>pgaccess.p_example</code> table reference
     */
    public Example(Name alias) {
        this(alias, EXAMPLE);
    }

    private Example(Name alias, Table<ExampleRecord> aliased) {
        this(alias, aliased, null);
    }

    private Example(Name alias, Table<ExampleRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("An example table containing all datatypes that are supported by reactive-pg-access."));
    }

    public <O extends Record> Example(Table<O> child, ForeignKey<O, ExampleRecord> key) {
        super(child, key, EXAMPLE);
    }

    @Override
    public Schema getSchema() {
        return Pgaccess.PGACCESS;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.EXAMPLE_PK);
    }

    @Override
    public Identity<ExampleRecord, Short> getIdentity() {
        return Keys.IDENTITY_EXAMPLE;
    }

    @Override
    public UniqueKey<ExampleRecord> getPrimaryKey() {
        return Keys.EXAMPLE_PK;
    }

    @Override
    public List<UniqueKey<ExampleRecord>> getKeys() {
        return Arrays.<UniqueKey<ExampleRecord>>asList(Keys.EXAMPLE_PK);
    }

    @Override
    public Example as(String alias) {
        return new Example(DSL.name(alias), this);
    }

    @Override
    public Example as(Name alias) {
        return new Example(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Example rename(String name) {
        return new Example(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Example rename(Name name) {
        return new Example(name, null);
    }
}
