/**
 * This class is generated by jOOQ.
 */
package io.en4ble.examples.jooq.tables.mappers
import io.en4ble.examples.jooq.tables.pojos.ConferenceDto
@Suppress("PARAMETER_NAME_CHANGED_ON_OVERRIDE", "RemoveRedundantQualifierName")
class ConferenceDtoMapper:io.en4ble.pgaccess.mappers.AbstractJooqMapper<ConferenceDto>() {
    companion object {
        private val instance = io.en4ble.examples.jooq.tables.mappers.ConferenceDtoMapper()
        fun instance():ConferenceDtoMapper {
            return instance
        }
        fun map(row:io.reactiverse.pgclient.Row):ConferenceDto {
            return instance.toDto(row)
        }
        fun map(res:io.reactiverse.pgclient.PgRowSet ):List<ConferenceDto>  {
            return instance.toList(res)
        }
    }
    @SuppressWarnings("Duplicates", "unused")
override fun toDto(row:io.reactiverse.pgclient.Row, offset:Int):ConferenceDto {
        val dto = ConferenceDto()
        dto.setId(row.getUUID(offset))
        dto.setCreated(row.getLocalDateTime(offset+1))
        dto.setUpdated(row.getLocalDateTime(offset+2))
        dto.setName(row.getString(offset+3))
        dto.setAbout(row.getString(offset+4))
        dto.setStartDate(row.getLocalDate(offset+5))
        dto.setEndDate(row.getLocalDate(offset+6))
        val c_state = (io.en4ble.examples.jooq.tables.Conference.CONFERENCE.STATE.converter as io.en4ble.examples.converters.ConferenceStateEnumConverter).from(row.getString(offset+7))
        if (c_state != null) {
            dto.setState(c_state)
        }
        dto.setLocation(io.en4ble.pgaccess.util.JooqHelper.getPointDTO(row.getPoint(offset+8)))
        return dto
    }
    override fun getValueMap(o:Any):Map<org.jooq.Field<*>,*>  {
        val dto = o as ConferenceDto
        val map = mutableMapOf<org.jooq.Field<*>,Any>()
        val id=dto.id
        if(id !=null) {
            map.put(io.en4ble.examples.jooq.tables.Conference.CONFERENCE.ID,id)
        }
        val created=dto.created
        if(created !=null) {
            map.put(io.en4ble.examples.jooq.tables.Conference.CONFERENCE.CREATED,created)
        }
        val updated=dto.updated
        if(updated !=null) {
            map.put(io.en4ble.examples.jooq.tables.Conference.CONFERENCE.UPDATED,updated)
        }
        val name=dto.name
        if(name !=null) {
            map.put(io.en4ble.examples.jooq.tables.Conference.CONFERENCE.NAME,name)
        }
        val about=dto.about
        if(about !=null) {
            map.put(io.en4ble.examples.jooq.tables.Conference.CONFERENCE.ABOUT,about)
        }
        val startDate=dto.startDate
        if(startDate !=null) {
            map.put(io.en4ble.examples.jooq.tables.Conference.CONFERENCE.START_DATE,startDate)
        }
        val endDate=dto.endDate
        if(endDate !=null) {
            map.put(io.en4ble.examples.jooq.tables.Conference.CONFERENCE.END_DATE,endDate)
        }
        val state=dto.state
        if(state !=null) {
            map.put(io.en4ble.examples.jooq.tables.Conference.CONFERENCE.STATE,state)
        }
        val location=dto.location
        if(location !=null) {
            map.put(io.en4ble.examples.jooq.tables.Conference.CONFERENCE.LOCATION,location)
        }
        return map
    }
}
