/**
 * This class is generated by jOOQ.
 */
package io.en4ble.examples.jooq.tables.mappers
import io.en4ble.examples.jooq.tables.pojos.ConferenceV1Form
import io.en4ble.examples.jooq.tables.pojos.ConferenceV1Dto
@Suppress("PARAMETER_NAME_CHANGED_ON_OVERRIDE", "RemoveRedundantQualifierName")
class ConferenceV1FormMapper:io.en4ble.pgaccess.mappers.AbstractJooqMapper<ConferenceV1Form>() {
    companion object {
        private val instance = io.en4ble.examples.jooq.tables.mappers.ConferenceV1FormMapper()
        fun instance():ConferenceV1FormMapper {
            return instance
        }
        fun map(row:io.vertx.sqlclient.Row):ConferenceV1Form {
            return instance.toDto(row)
        }
        fun map(res:io.vertx.sqlclient.RowSet<io.vertx.sqlclient.Row>  ):List<ConferenceV1Form>  {
            return instance.toList(res)
        }
    }
    @SuppressWarnings("Duplicates", "unused")
override fun toDto(row:io.vertx.sqlclient.Row, offset:Int):ConferenceV1Form {
        val dto = ConferenceV1Form()
        dto.setId(row.getUUID(offset))
        dto.setName(row.getString(offset+1))
        dto.setAbout(row.getString(offset+2))
        dto.setStartDate(row.getLocalDate(offset+3))
        dto.setEndDate(row.getLocalDate(offset+4))
        dto.setLocation(io.en4ble.pgaccess.util.JooqHelper.getPointDTO(row.get(io.vertx.pgclient.data.Point::class.java,offset+5)))
        val state = row.getString(offset+6)
        if (state != null) {
            val state_converted=(io.en4ble.examples.jooq.tables.ConferenceV1.CONFERENCE_V1.STATE.converter as io.en4ble.examples.converters.ConferenceStateEnumConverter).from(state)
            if(state_converted != null) {
                dto.setState(state_converted)
            }
        }
        return dto
    }
    override fun getValueMap(o:Any):Map<org.jooq.Field<*>,*>  {
        val dto = o as ConferenceV1Dto
        val map = mutableMapOf<org.jooq.Field<*>,Any>()
        val id=dto.id
        if(id !=null) {
            map.put(io.en4ble.examples.jooq.tables.ConferenceV1.CONFERENCE_V1.ID,id)
        }
        val name=dto.name
        if(name !=null) {
            map.put(io.en4ble.examples.jooq.tables.ConferenceV1.CONFERENCE_V1.NAME,name)
        }
        val about=dto.about
        if(about !=null) {
            map.put(io.en4ble.examples.jooq.tables.ConferenceV1.CONFERENCE_V1.ABOUT,about)
        }
        val startDate=dto.startDate
        if(startDate !=null) {
            map.put(io.en4ble.examples.jooq.tables.ConferenceV1.CONFERENCE_V1.START_DATE,startDate)
        }
        val endDate=dto.endDate
        if(endDate !=null) {
            map.put(io.en4ble.examples.jooq.tables.ConferenceV1.CONFERENCE_V1.END_DATE,endDate)
        }
        val location=dto.location
        if(location !=null) {
            map.put(io.en4ble.examples.jooq.tables.ConferenceV1.CONFERENCE_V1.LOCATION,location)
        }
        val state=dto.state
        if(state !=null) {
            map.put(io.en4ble.examples.jooq.tables.ConferenceV1.CONFERENCE_V1.STATE,state)
        }
        return map
    }
}
