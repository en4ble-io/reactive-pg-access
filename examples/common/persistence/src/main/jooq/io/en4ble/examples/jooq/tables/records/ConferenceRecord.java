/*
 * This file is generated by jOOQ.
 */
package io.en4ble.examples.jooq.tables.records;


import io.en4ble.examples.enums.ConferenceState;
import io.en4ble.examples.jooq.tables.Conference;
import io.en4ble.pgaccess.dto.PointDTO;

import java.io.Serializable;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * A simple conference.
 */
@io.swagger.v3.oas.annotations.media.Schema(name="Conference", title="A simple conference.")
public class ConferenceRecord extends UpdatableRecordImpl<ConferenceRecord> implements Serializable, Cloneable, Record9<UUID, LocalDateTime, LocalDateTime, String, String, LocalDate, LocalDate, ConferenceState, PointDTO> {

    private static final long serialVersionUID = -48211055;

    /**
     * Setter for <code>pgaccess.p_conference.c_id</code>.
     */
    public ConferenceRecord setId(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>pgaccess.p_conference.c_id</code>.
     */
    @io.swagger.v3.oas.annotations.media.Schema(accessMode = io.swagger.v3.oas.annotations.media.Schema.AccessMode.READ_WRITE, name="id")
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>pgaccess.p_conference.c_created</code>. {{internal}}
     */
    public ConferenceRecord setCreated(LocalDateTime value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>pgaccess.p_conference.c_created</code>. {{internal}}
     */
    @io.swagger.v3.oas.annotations.Hidden
    @com.fasterxml.jackson.annotation.JsonIgnore
    public LocalDateTime getCreated() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>pgaccess.p_conference.c_updated</code>. {{internal}}
     */
    public ConferenceRecord setUpdated(LocalDateTime value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>pgaccess.p_conference.c_updated</code>. {{internal}}
     */
    @io.swagger.v3.oas.annotations.Hidden
    @com.fasterxml.jackson.annotation.JsonIgnore
    public LocalDateTime getUpdated() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>pgaccess.p_conference.c_name</code>. The name of the conference. {{minLength=5}}{{maxLength=30}}
     */
    public ConferenceRecord setName(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>pgaccess.p_conference.c_name</code>. The name of the conference. {{minLength=5}}{{maxLength=30}}
     */
    /**
     * The name of the conference.
     */
    @org.hibernate.validator.constraints.Length(min = 5, max = 30)
    @io.swagger.v3.oas.annotations.media.Schema(accessMode = io.swagger.v3.oas.annotations.media.Schema.AccessMode.READ_WRITE, name="name", title="The name of the conference.")
    public String getName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>pgaccess.p_conference.c_about</code>. The description of the conference. {{minLength=20}}{{maxLength=2000}}
     */
    public ConferenceRecord setAbout(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>pgaccess.p_conference.c_about</code>. The description of the conference. {{minLength=20}}{{maxLength=2000}}
     */
    /**
     * The description of the conference.
     */
    @org.hibernate.validator.constraints.Length(min = 20, max = 2000)
    @io.swagger.v3.oas.annotations.media.Schema(accessMode = io.swagger.v3.oas.annotations.media.Schema.AccessMode.READ_WRITE, name="about", title="The description of the conference.")
    public String getAbout() {
        return (String) get(4);
    }

    /**
     * Setter for <code>pgaccess.p_conference.c_start_date</code>.
     */
    public ConferenceRecord setStartDate(LocalDate value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>pgaccess.p_conference.c_start_date</code>.
     */
    @io.swagger.v3.oas.annotations.media.Schema(accessMode = io.swagger.v3.oas.annotations.media.Schema.AccessMode.READ_WRITE, name="startDate")
    public LocalDate getStartDate() {
        return (LocalDate) get(5);
    }

    /**
     * Setter for <code>pgaccess.p_conference.c_end_date</code>.
     */
    public ConferenceRecord setEndDate(LocalDate value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>pgaccess.p_conference.c_end_date</code>.
     */
    @io.swagger.v3.oas.annotations.media.Schema(accessMode = io.swagger.v3.oas.annotations.media.Schema.AccessMode.READ_WRITE, name="endDate")
    public LocalDate getEndDate() {
        return (LocalDate) get(6);
    }

    /**
     * Setter for <code>pgaccess.p_conference.c_state</code>. {{default=NEW}}{{minLength=3}}{{maxLength=7}}{{readOnly}}
     */
    public ConferenceRecord setState(ConferenceState value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>pgaccess.p_conference.c_state</code>. {{default=NEW}}{{minLength=3}}{{maxLength=7}}{{readOnly}}
     */
    @org.hibernate.validator.constraints.Length(min = 3, max = 7)
    @io.swagger.v3.oas.annotations.media.Schema(accessMode = io.swagger.v3.oas.annotations.media.Schema.AccessMode.READ_ONLY, name="state", title="", defaultValue="NEW")
    public ConferenceState getState() {
        return (ConferenceState) get(7);
    }

    /**
     * Setter for <code>pgaccess.p_conference.c_location</code>.
     */
    public ConferenceRecord setLocation(PointDTO value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>pgaccess.p_conference.c_location</code>.
     */
    @io.swagger.v3.oas.annotations.media.Schema(accessMode = io.swagger.v3.oas.annotations.media.Schema.AccessMode.READ_WRITE, name="location")
    public PointDTO getLocation() {
        return (PointDTO) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row9<UUID, LocalDateTime, LocalDateTime, String, String, LocalDate, LocalDate, ConferenceState, PointDTO> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row9<UUID, LocalDateTime, LocalDateTime, String, String, LocalDate, LocalDate, ConferenceState, PointDTO> valuesRow() {
        return (Row9) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UUID> field1() {
        return Conference.CONFERENCE.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field2() {
        return Conference.CONFERENCE.CREATED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field3() {
        return Conference.CONFERENCE.UPDATED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Conference.CONFERENCE.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Conference.CONFERENCE.ABOUT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDate> field6() {
        return Conference.CONFERENCE.START_DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDate> field7() {
        return Conference.CONFERENCE.END_DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<ConferenceState> field8() {
        return Conference.CONFERENCE.STATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<PointDTO> field9() {
        return Conference.CONFERENCE.LOCATION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UUID component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component2() {
        return getCreated();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component3() {
        return getUpdated();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getAbout();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDate component6() {
        return getStartDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDate component7() {
        return getEndDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ConferenceState component8() {
        return getState();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PointDTO component9() {
        return getLocation();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UUID value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value2() {
        return getCreated();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value3() {
        return getUpdated();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getAbout();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDate value6() {
        return getStartDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDate value7() {
        return getEndDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ConferenceState value8() {
        return getState();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PointDTO value9() {
        return getLocation();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ConferenceRecord value1(UUID value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ConferenceRecord value2(LocalDateTime value) {
        setCreated(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ConferenceRecord value3(LocalDateTime value) {
        setUpdated(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ConferenceRecord value4(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ConferenceRecord value5(String value) {
        setAbout(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ConferenceRecord value6(LocalDate value) {
        setStartDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ConferenceRecord value7(LocalDate value) {
        setEndDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ConferenceRecord value8(ConferenceState value) {
        setState(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ConferenceRecord value9(PointDTO value) {
        setLocation(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ConferenceRecord values(UUID value1, LocalDateTime value2, LocalDateTime value3, String value4, String value5, LocalDate value6, LocalDate value7, ConferenceState value8, PointDTO value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ConferenceRecord
     */
    public ConferenceRecord() {
        super(Conference.CONFERENCE);
    }

    /**
     * Create a detached, initialised ConferenceRecord
     */
    public ConferenceRecord(UUID id, LocalDateTime created, LocalDateTime updated, String name, String about, LocalDate startDate, LocalDate endDate, ConferenceState state, PointDTO location) {
        super(Conference.CONFERENCE);

        set(0, id);
        set(1, created);
        set(2, updated);
        set(3, name);
        set(4, about);
        set(5, startDate);
        set(6, endDate);
        set(7, state);
        set(8, location);
    }
}
